parserImport XOCL;

import AbstractSyntax;

context AbstractSyntax
  @Class FVEnv
    @Attribute namespaces:[NameSpace] (<) end
    @Attribute varsInScope:[String] end
    @Constructor(namespaces,varsInScope) end
    @Operation addNameSpace(n:NameSpace):FVEnv
      FVEnv(Seq{n|namespaces},varsInScope)
    end
    @Operation addVar(n:String)
      FVEnv(namespaces,Seq{n|varsInScope})
    end
    @Operation binds(n:String):Boolean
      varsInScope->includes(n) or
      namespaces->exists(namespace | namespace.hasElement(n))
    end
    @Operation getElement(n:String):NamedElement
      @Find(namespace,namespaces) 
        when namespace.hasElement(n) 
        do namespace.getElement(n) 
        else null 
      end
    end
    @Operation getPath(p:[String]):Element
      if p = []
      then null
      else p->tail->iterate(n ns=self.getElement(p->head) | if ns = null then null elseif ns.hasElement(n) then ns.getElement(n) else null end)
      end
    end 
  end