parserImport XOCL;
parserImport XEditor;

import AbstractSyntax;

@EventHandler registerLocations(text,language,editor) 

  // This is invoked via SEND to register the locations of abstract syntax
  // and to register a diagram (when applicable). This may take a while so it
  // is best to invoke this concurrently allowing the editor to continue...
  
   try 
      let links = Table(100); model = Root::PARSED_MODEL
      in 
        editor.reset();
        LOCATION_MANAGER.registerLocations(model,editor)
      end
    catch(exception)
       editor.displayError(exception.toString());
       @TypeCase(exception)
         Exceptions::XMFEditorError do Root::xmfException := exception;
           [exception.charStart,exception.charEnd,exception.message]
         end
        Object do Root::xmfException := exception;
           [text->size - 1,text->size - 1,exception.toString()]
        end
       end
     end
  end;